 
  /*
  Cleaning Data in SQL Queries 

  */

  SELECT * 
  FROM PortfolioProject.dbo.NashvilleHousing



  -----------------------------------------------------------------------------------------------

 -- Standardize Data Format 


 SELECT SaleDate, CONVERT (Date,SaleDate)
 FROM PortfolioProject.dbo.NashvilleHousing

 Update NashvilleHousing
 Set SaleDate = convert(Date,SaleDate)

 -- OR 

 Alter Table NashvilleHousing
 ADD SaleDateConverted Date;

 Update NashvilleHousing
 Set SaleDateConverted = convert(Date,SaleDate)

  SELECT SaleDateConverted, CONVERT (Date,SaleDate)
 FROM PortfolioProject.dbo.NashvilleHousing

 -----------------------------------------------------------------------------------------------
 -- Populate Property Address Data 

 SELECT *
 FROM PortfolioProject.dbo.NashvilleHousing
 WHERE PropertyAddress IS Null

 SELECT *
 FROM PortfolioProject.dbo.NashvilleHousing
-- WHERE PropertyAddress IS Null
ORDER BY ParcelID


SELECT a.ParcelID, a.PropertyAddress,b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
 FROM PortfolioProject.dbo.NashvilleHousing a
 JOIN PortfolioProject.dbo.NashvilleHousing b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ]<> b.[UniqueID ]
WHERE a.PropertyAddress is null


Update 
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
SELECT a.ParcelID, a.PropertyAddress,b.ParcelID, b.PropertyAddress
 FROM PortfolioProject.dbo.NashvilleHousing AS a
 JOIN PortfolioProject.dbo.NashvilleHousing AS b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ]<> b.[UniqueID ]
WHERE a.PropertyAddress is null

 -- Breaking Out Address into Individual Columns (Address, City, State)

 SELECT PropertyAddress
 FROM PortfolioProject.dbo.NashvilleHousing
-- WHERE PropertyAddress IS Null 

SELECT 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress)-1) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress) +1 , LEN(PropertyAddress)) as Address


FROM PortfolioProject.dbo.NashvilleHousing

Alter Table NashvilleHousing
 ADD PropertySplitAddress Nvarchar(255);

 Update NashvilleHousing
 Set PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress)-1) 

Alter Table NashvilleHousing
 ADD PropertySplitCity Nvarchar(255);

 Update NashvilleHousing
 Set PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress) +1 , LEN(PropertyAddress))


 Select * 
 FROM PortfolioProject.dbo.NashvilleHousing
  
  -- Populate Property Data

Select OwnerAddress 
 FROM PortfolioProject.dbo.NashvilleHousing

 SELECT
 PARSENAME(Replace(OwnerAddress, ',','.'), 3)
 ,PARSENAME(Replace(OwnerAddress, ',','.'), 2)
 ,PARSENAME(Replace(OwnerAddress, ',','.'), 1)
 FROM PortfolioProject.dbo.NashvilleHousing



 Alter Table NashvilleHousing
 ADD OwnerSplitAddress Nvarchar(255);;

 Update NashvilleHousing
 Set OwnerSplitAddress = PARSENAME(Replace(OwnerAddress, ',','.'), 3)

Alter Table NashvilleHousing
 ADD OwnerSplitCity Nvarchar(255);

 Update NashvilleHousing
 Set OwnerSplitCity = PARSENAME(Replace(OwnerAddress, ',','.'), 2)

 Alter Table NashvilleHousing
 ADD OwnerSplitState Nvarchar(255);

 Update NashvilleHousing
 Set OwnerSplitState = PARSENAME(Replace(OwnerAddress, ',','.'), 1)

  Select * 
 FROM PortfolioProject.dbo.NashvilleHousing





 -----------------------------------------------------------------------------------------------
 -- Change Y and N to Yes and No in "Sold as Vacant Field 





 Select SoldAsVacant
 , CASE when SoldAsVacant = 'Y' THEN 'Yes'
		when SoldAsVacant = 'N' THEN 'No' 
		ELSE SoldAsVacant
		END
  FROM PortfolioProject.dbo.NashvilleHousing

  Update NashvilleHousing
  SET SoldAsVacant =  CASE when SoldAsVacant = 'Y' THEN 'Yes'
		when SoldAsVacant = 'N' THEN 'No' 
		ELSE SoldAsVacant
		END


SELECT Distinct (SoldAsVacant), Count(SoldAsVacant) 
FROM PortfolioProject.dbo.NashvilleHousing
GROUP By SoldAsVacant
order by 2




-----------------------------------------------------------------------------------------------
  -- Remove Duplicates 

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From PortfolioProject.dbo.NashvilleHousing
--order by ParcelID
)
Delete *
From RowNumCTE
Where row_num > 1
Order by PropertyAddress



Select *
From PortfolioProject.dbo.NashvilleHousing




-----------------------------------------------------------------------------------------------
  -- Delete Unused Columns 


Select *
From PortfolioProject.dbo.NashvilleHousing


ALTER TABLE PortfolioProject.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
